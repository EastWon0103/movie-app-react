{"version":3,"sources":["components/Movie.js","components/Button.js","api.js","components/Search.js","App.js","index.js"],"names":["Movie","id","year","title","poster","rating","director","actor","className","href","target","src","alt","titlt","replace","Button","setSelectedNumber","onClick","console","log","api","axios","create","baseURL","headers","naverMoviesApi","word","get","params","query","display","Search","useState","isLoading","setLoading","movies","setMovies","value","setValue","name","selectedNumber","getSearchMovie","a","res","data","items","error","onSubmit","e","preventDefault","type","onChange","placeholder","map","movie","idx","key","link","pubDate","image","userRating","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b034900.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// funciton asd() {}\n// const asd = () => {}\n\nconst Movie = ({id, year, title, poster, rating, director, actor}) => {\n  return (\n    <div className=\"movie\">\n    <a href={id} target=\"_blank\">\n      <img src={poster} alt={title} titlt={title}></img>\n    <div className=\"movie__data\">\n      <h3 className=\"movie__title\">{\n          title.replace(/<b>/gi,\"\").replace(/<\\/b>/gi,\"\")\n        }</h3>\n      <p className=\"movie__rating\">\n        <span>평점</span> {rating}/10\n      </p>\n      <p className=\"movie__year\">\n        <span>개봉일</span> {year}\n      </p>\n    <p className=\"movie__director\">\n      <span>감독</span> {director}\n    </p>\n    <p className=\"movie__actor\">\n      <span>배우</span> {actor}\n    </p>\n    </div>\n  </a>\n  </div>\n  )\n};\n\nMovie.propTypes = {\n  id: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  rating: PropTypes.string.isRequired,\n  director: PropTypes.string.isRequired,\n  actor: PropTypes.string.isRequired,\n\n};\n\nexport default Movie;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Search.css';\r\nimport './Movie.css';\r\n\r\nconst Button = ({ id, setSelectedNumber }) => {\r\n  const onClickNumber = () => {\r\n    console.log({ id }.id);\r\n    setSelectedNumber({ id }.id);\r\n  };\r\n\r\n  return (\r\n    <button className=\"button\" onClick={onClickNumber}>\r\n      {id + 1}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import axios from 'axios';\n\nconst ID_KEY = 'MPF85hV_M_MgoJFe46Ms';\nconst SECRET_KEY = 'uSvgQms2A1';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'X-Naver-Client-Id': ID_KEY,\n    'X-Naver-Client-Secret': SECRET_KEY,\n  }\n});\n\nexport const naverMoviesApi = {\n  search: word => api.get('/v1/search/movie.json', {\n    params: {\n      query: word,\n      display: 10\n    }\n  })\n};\n","import React, { useCallback, useState } from 'react';\nimport Movie from './Movie';\nimport Button from './Button';\nimport './Search.css';\nimport { naverMoviesApi } from '../api';\nimport { MdAdd } from 'react-icons/md';\n\nconst Search = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('영화 검색');\n  const [selectedNumber, setSelectedNumber] = useState('null');\n\n  const getSearchMovie = async () => {\n    try {\n      if (value === '') {\n        setMovies([]);\n        setLoading(false);\n      } else {\n        setLoading(true);\n\n        const res = await naverMoviesApi.search(value);\n        setMovies(res.data.items);\n        setLoading(false);\n        //alert(\"(Loading 메시지 확인중...)\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    getSearchMovie();\n  };\n\n  return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">\n            ({name}) Loading... {value}\n          </span>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className=\"line\">\n            <div className=\"input_div\">\n              <h1 className=\"ss\">영화 검색 서비스</h1>\n              <div className=\"is\">\n                <input\n                  className=\"input_search\"\n                  type=\"text\"\n                  value={value}\n                  onChange={handleChange}\n                  placeholder=\"영화 이름을 입력하세요.\"\n                />\n                <button type=\"submit\">\n                  <MdAdd />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"List\">\n              {movies.map((movie, idx) => (\n                <Button key={idx} id={idx} setSelectedNumber={setSelectedNumber} />\n              ))}\n              {selectedNumber != 'null' && (\n                <Movie\n                  key={movies[selectedNumber].link}\n                  id={movies[selectedNumber].link}\n                  year={movies[selectedNumber].pubDate}\n                  title={movies[selectedNumber].title}\n                  poster={movies[selectedNumber].image}\n                  rating={movies[selectedNumber].userRating}\n                  director={movies[selectedNumber].director}\n                  actor={movies[selectedNumber].actor}\n                />\n              )}\n            </div>\n          </div>\n        </form>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport Search from \"./components/Search\" \n\nfunction App(){\n  return (\n  <Search> </Search>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}