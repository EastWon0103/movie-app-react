{"version":3,"sources":["components/Movie.js","api.js","components/Search.js","App.js","index.js"],"names":["Movie","poster","year","title","genre","runtime","rating","like","summary","className","src","match","map","keyword","idx","axios","create","baseURL","headers","Search","useState","isLoading","setLoading","movies","setMovies","value","setValue","name","selectedNumber","setSelectedNumber","getSearchMovie","a","console","log","get","res","data","error","onSubmit","e","preventDefault","type","onChange","target","placeholder","movie","key","id","onClick","medium_cover_image","alt","link","large_cover_image","genres","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a6116a6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\n// funciton asd() {}\n// const asd = () => {}\n\n//백그라운드 ,년도, 타이틀, 장르, 분, 평점, 좋아요 줄거리\nconst Movie = ({poster, year, title, genre, runtime, rating, like, summary}) => {\n  return (\n    <div className=\"background\">\n      <img src={`https://movie-app-20181580.herokuapp.com/yts/${poster.match(/assets.*/)}`}></img>\n      \n      <div className=\"info\">\n        <div className=\"movie_year\">{year+\"년 개봉\"}</div>\n        <div className=\"blackBox\">\n          <h2 className=\"movie_title\">{title}</h2>\n          <div className=\"movie_genres\">{genre.map((keyword, idx)=>(\n            idx? ','+keyword : keyword\n          ))}</div>\n          <h3 className=\"movie_info_name\">영화 정보</h3>\n          <div className=\"basic_info_wrap\">\n            <div>{runtime+\"분\"}</div>\n            <div>{\"평점: \"+ rating}</div>\n            <div>{\"좋아요: \"+like}</div>\n          </div>\n          <h3 className=\"summary_title\">줄거리</h3>\n          <div className=\"movie_summary\">{summary}</div>\n        </div>\n      </div>\n      \n    </div>\n  )\n};\n\nMovie.propTypes = {\n  poster: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  genre: PropTypes.array.isRequired,\n  runtime: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  like: PropTypes.number.isRequired,\n  summary: PropTypes.string.isRequired,\n};\n\nexport default Movie;\n","import axios from 'axios';\n\nconst ID_KEY = 'MPF85hV_M_MgoJFe46Ms';\nconst SECRET_KEY = 'uSvgQms2A1';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'X-Naver-Client-Id': ID_KEY,\n    'X-Naver-Client-Secret': SECRET_KEY,\n  }\n});\n\nexport const naverMoviesApi = {\n  search: word => api.get('/v1/search/movie.json', {\n    params: {\n      query: word,\n      display: 10\n    }\n  })\n};\n","import React, { useCallback, useState } from 'react';\nimport Movie from './Movie';\nimport Button from './Button';\nimport './Search.css';\nimport { naverMoviesApi } from '../api';\nimport axios from 'axios';\n// import { ytsMovieApi } from '../ytsApi.js';\nimport { MdAdd } from 'react-icons/md';\n\nconst Search = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [value, setValue] = useState('');\n  const [name, setName] = useState('영화 검색');\n  const [selectedNumber, setSelectedNumber] = useState('null');\n\n  const getSearchMovie = async () => {\n    try {\n      if (value === '') {\n        setMovies([]);\n        setLoading(false);\n      } else if(value === 'like 5'){\n        console.log(\"okay\");\n        setLoading(true);\n\n        const res = await axios.get('https://movie-app-20181580.herokuapp.com/yts/api/v2/list_movies.json?sort_by=like_count&order_by=desc&limit=5');\n        // console.log(res.data.data.movies);\n        setMovies(res.data.data.movies);\n        \n        setLoading(false);\n        //alert(\"(Loading 메시지 확인중...)\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getSearchMovie();\n  };\n\n  return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">\n            ({name}) Loading... {value}\n          </span>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className=\"line\">\n            <div className=\"input_div\">\n              <h1 className=\"ss\">yts.mx 영화 정보</h1>\n              <div className=\"is\">\n                <input\n                  className=\"input_search\"\n                  type=\"text\"\n                  value={value}\n                  onChange={handleChange}\n                  placeholder=\"입력포맷: <정렬기준><검색개수> 예:like 5\"\n                />\n                <button type=\"submit\">\n                  <MdAdd />\n                </button>\n              </div>\n            </div>\n            {/* {console.log(movies)} */}\n            <div className=\"content\">\n              <div className=\"imgWrap\">\n                {console.log(movies)}\n                {movies.map((movie, idx) => (\n                  <img key={idx} id={idx} onClick={() => setSelectedNumber(idx)} src={`https://movie-app-20181580.herokuapp.com/yts/${movie.medium_cover_image.match(/assets.*/)}`} alt={movie.title}/>\n                ))}\n              </div>\n              <div className=\"showMovie\">\n                  {selectedNumber != 'null' && (\n                    <Movie\n                      key ={movies[selectedNumber].link}\n                      poster = {`https://movie-app-20181580.herokuapp.com/yts/${movies[selectedNumber].large_cover_image.match(/assets.*/)}`}\n                      year = {movies[selectedNumber].year}\n                      title = {movies[selectedNumber].title}\n                      genre = {movies[selectedNumber].genres}\n                      runtime = {movies[selectedNumber].runtime}\n                      rating = {movies[selectedNumber].rating}\n                      like = {movies[selectedNumber].id}\n                      summary = {movies[selectedNumber].summary}\n                    />\n                  )}\n              </div>\n\n            </div>\n\n            {/* // <div className=\"List\">\n            //   {movies.map((movie, idx) => (\n            //     <Button key={idx} id={idx} setSelectedNumber={setSelectedNumber} />\n            //   ))}\n            //   {selectedNumber != 'null' && (\n            //     <Movie\n            //       key={movies[selectedNumber].link}\n            //       id={movies[selectedNumber].link}\n            //       year={movies[selectedNumber].pubDate}\n            //       title={movies[selectedNumber].title}\n            //       poster={movies[selectedNumber].image}\n            //       rating={movies[selectedNumber].userRating}\n            //       director={movies[selectedNumber].director}\n            //       actor={movies[selectedNumber].actor}\n            //     />\n            //   )}\n            // </div> */}\n          </div>\n        </form>\n      )}\n    </section>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport Search from \"./components/Search\" \n\nfunction App(){\n  return (\n  <Search> </Search>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}